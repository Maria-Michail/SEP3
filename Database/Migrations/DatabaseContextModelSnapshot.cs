// <auto-generated />
using System;
using Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Database.Model.Account", b =>
                {
                    b.Property<string>("username")
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.HasKey("username");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("Model.Address", b =>
                {
                    b.Property<string>("street")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("streetNumber")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT");

                    b.Property<int>("zipCode")
                        .HasColumnType("INTEGER");

                    b.HasKey("street", "streetNumber");

                    b.ToTable("addresses");
                });

            modelBuilder.Entity("Model.Amount", b =>
                {
                    b.Property<double>("number")
                        .HasColumnType("REAL");

                    b.Property<string>("unitType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("number");

                    b.ToTable("Amount");
                });

            modelBuilder.Entity("Model.Category", b =>
                {
                    b.Property<string>("category")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("category");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Model.Ingredient", b =>
                {
                    b.Property<int>("ingredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Amountnumber")
                        .HasColumnType("REAL");

                    b.Property<string>("Recipename")
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("ingredientId");

                    b.HasIndex("Amountnumber");

                    b.HasIndex("Recipename");

                    b.ToTable("ingredients");
                });

            modelBuilder.Entity("Model.Recipe", b =>
                {
                    b.Property<string>("name")
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("category")
                        .HasColumnType("TEXT");

                    b.Property<double>("cookingTime")
                        .HasColumnType("REAL");

                    b.Property<string>("instructions")
                        .HasColumnType("TEXT");

                    b.HasKey("name");

                    b.HasIndex("category");

                    b.ToTable("recipes");
                });

            modelBuilder.Entity("Model.ShopIngredient", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<double>("price")
                        .HasColumnType("REAL");

                    b.HasKey("id");

                    b.ToTable("shopIngredients");
                });

            modelBuilder.Entity("Model.Ingredient", b =>
                {
                    b.HasOne("Model.Amount", "Amount")
                        .WithMany()
                        .HasForeignKey("Amountnumber");

                    b.HasOne("Model.Recipe", null)
                        .WithMany("ingredients")
                        .HasForeignKey("Recipename");

                    b.Navigation("Amount");
                });

            modelBuilder.Entity("Model.Recipe", b =>
                {
                    b.HasOne("Model.Category", "Category")
                        .WithMany()
                        .HasForeignKey("category");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Model.Recipe", b =>
                {
                    b.Navigation("ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
