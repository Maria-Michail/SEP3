@page "/payment"
@using Blazor.Data

@using System.Numerics
@using Blazor.Authorization
@using Database.Model
@using Model
@inject IOrderService OrderService
@inject IRecipeService RecipeService
@inject IIngredientsService IngredientsService
@inject NavigationManager NavigationManager




<div class="row">
    <EditForm class="regForm col-7 bg-white" Model="@bankInfo" OnValidSubmit="@HandleValidPayment" OnInvalidSubmit="@HandleInvalidPayment">
        <div class="p-2 m-2">
            <h2 class="title" xmlns="http://www.w3.org/1999/html">Payment</h2>
            <div class="p-2 m-2">
                <div class="row ">
                    <DataAnnotationsValidator/>
                    <ValidationSummary/>

                    <!--Bank information section -->
                    <div class="col-11 bg-white">
                        <ul class="orderPageList" data-role="listview" style="list-style-type: none">
                            <li>
                                <div class="form-group">
                                    Card holder:<br/>
                                    <InputText class="regInput" style="width:90%" @bind-Value="bankInfo.cardHolder"/>
                                </div>
                            </li>
                            <li>
                                <div class="form-group">
                                    Card Number:<br/>
                                    <InputNumber class="regInput" style="width:90%" @bind-Value="bankInfo.cardNumber"/>
                                </div>
                            </li>
                            <div class="row">
                                <div class="col-6">
                                    <li>
                                        <div class="form-group">
                                            Expiry Date:<br/>
                                            <InputDate class="regInput" style="width:80%" @bind-Value="expiryDate"/>
                                        </div>
                                    </li>
                                </div>
                                <div class="col-6">
                                    <li>
                                        <div class="form-group">
                                            CVV:<br/>
                                            <InputNumber class="regInput" style="width:80%" @bind-Value="cvv"/>
                                        </div>
                                    </li>
                                </div>
                            </div>
                            <div class="row d-flex justify-content-center">
                                <p class="actions ">
                                    <button class="btn btn-primary order-button" type="submit">Pay Now</button>
                                </p>
                            </div>
                        </ul>
                    </div>
                    <div class="col-1 bg-white">
                            
                    </div>

                </div>
            </div>
        </div>
    </EditForm>
    

<div class="col-5 bg-light">
    <div class="p-2 m-3">
        <h3 class="text-center text-secondary">Order</h3>
    </div>
    <div class="row">
        <div class="col-2">
            
        </div>
        <div class="col-8">
            <div class="row">
                <div class="col-8">
                    <h1 class="display-4">@Recipe.recipeName</h1>
                    
                </div>
                <div class="col-4">
                    <p>$ 400</p>
                </div>
            </div>
            <div class="row" style="margin-top: 100px">
                    <div class="col-8">
                        <p class="text-secondary">Shipping</p>
                    </div>
                        <div class="col-4">
                            <p class="text-secondary">Free</p>
                        </div>
                </div>
                        <hr/>
                <div class="row">
                            <div class="col-8">
                                <p class="text-secondary">TOTAL</p>
                            </div>
                            <div class="col-4">
                                <p class="text-secondary">$400</p>
                            </div>
                </div>
        </div>
        <div class="col-2">
            
        </div>
    </div>
    
            
</div>
</div>

@code {


    private DateTime expiryDate;
    private int cvv;
    
    //Change those two
    private int orderId = 0;
    private double orderPrice = 0;

    private string errorMessage;

    private BankInfo bankInfo = new BankInfo();
    private Order newOrder = new Order();
    public Recipe Recipe;
    public Account currentUser;
    private IList<OrderedShopIngredients> newShopIngredients = new List<OrderedShopIngredients>();

    protected override async Task OnInitializedAsync()
    {
        //bankInfo = CustomAuthenticationStateProvider.getUser().bankInfo;
        Recipe = RecipeService.recipe;
        currentUser = CustomAuthenticationStateProvider.getUser();
        newShopIngredients = IngredientsService.OrderedShopIngredients;
        foreach (var order in newShopIngredients)
        {
            orderPrice = orderPrice + order.totalPrice;
        }
        
    }
    
    public async Task HandleValidPayment()
    {
        errorMessage = "";
        try
        {
            newOrder.orderId = orderId;
            newOrder.dateTime = DateTime.Now;
            newOrder.orderPrice = orderPrice;
            newOrder.recipeId = Recipe.recipeId;
            newOrder.userName = currentUser.username;
            newOrder.OrderedShopIngredients = newShopIngredients;
            Console.WriteLine("Trying paying");
            await OrderService.storeOrder(newOrder);
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
            Console.WriteLine("Payment failed");
            errorMessage = e.Message;
        }
    }

    public async Task HandleInvalidPayment()
    {
        Console.WriteLine("Invalid");
    }

    

}