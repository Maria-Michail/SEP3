@page "/register"
@using Blazor.Data
@using Model
@using System.Numerics
@inject IAccountService AccountService
@inject NavigationManager NavigationManager


<h2 class="title" xmlns="http://www.w3.org/1999/html">Make an Account</h2>

<EditForm class="regForm" Model="@newAccount" OnValidSubmit="@HandleValidRegister" OnInvalidSubmit="@HandleInvalidRegister">
    <div class="p-2 m-2">
        <div class="row ">
            <DataAnnotationsValidator/>
            <ValidationSummary/>

            <!--User information section -->
            <div class="col-4">
                <ul class="orderPageList" data-role="listview" style="list-style-type: none">
                    <li class="m-5">
                        <p>Username:</p>
                        <InputText class="form-control" placeholder="Username" aria-label="Username" aria-describedby="basic-addon1" @bind-Value="newAccount.username"/>
                    </li>
                    <li class="m-5">
                        <p>Password:</p>
                        <InputText class="form-control" placeholder="password" aria-label="password" aria-describedby="basic-addon1" @bind-Value="newAccount.password"/>
                    </li>
                    <li class="m-5">
                        <p>Email:</p>
                        <InputText class="form-control" placeholder="Email" aria-label="Email" aria-describedby="basic-addon1" @bind-Value="newAccount.email"/>
                        <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
                    </li>

                </ul>
            </div>

            <!--Delivery information section -->
            <div class="col-4">
                <ul class="orderPageList" data-role="listview" style="list-style-type: none">

                    <li>
                        <div class="form-group">
                            Street:<br/>
                            <InputText class="regInput" @bind-Value="newAccount.address.street"/>
                        </div>
                    </li>
                    <li>
                        <div class="form-group">
                            House Number:<br/>
                            <InputText class="regInput" @bind-Value="newAccount.address.streetNumber"/>
                        </div>
                    </li>
                    <li>
                        <div class="form-group">
                            City:<br/>
                            <InputText class="regInput" @bind-Value="newAccount.address.city"/>
                        </div>
                    </li>
                    <li>
                        <div class="form-group">
                            Zip Code:<br/>
                            <InputNumber class="regInput" @bind-Value="newAccount.address.zipCode"/>
                        </div>
                    </li>
                </ul>
            </div>


            <!--Bank information section -->
            <div class="col-4">
                <ul class="orderPageList" data-role="listview" style="list-style-type: none">

                    <li>
                        <div class="form-group">
                            Card holder:<br/>
                            <InputText class="regInput" @bind-Value="newAccount.bankInfo.cardHolder"/>
                        </div>
                    </li>
                    <li>
                        <div class="form-group">
                            Card Number:<br/>
                            <InputText class="regInput" @bind-Value="newAccount.bankInfo.cardNumber"/>
                        </div>
                    </li>
                   
                </ul>
            </div>

        </div>
        <div class="row d-flex justify-content-center">
            <p class="actions ">
                <button class="btn btn-primary order-button" type="submit">Register</button>
            </p>
        </div>
    </div>
</EditForm>

@code {

    private string username;
    private string password;
    private string email;
    private string street;
    private string streetNumber;
    private string city;
    private int zipCode;
    private string cardNumber;
   
    private string errorMessage;

    private Account newAccount = new Account();

    public async Task HandleValidRegister()
    {
        errorMessage = "";
        try
        {
            Console.WriteLine("Trying register");
            await AccountService.Register(newAccount);
            username = "";
            password = "";
            email = "";
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
            Console.WriteLine("Register failed");
            errorMessage = e.Message;
        }
    }

    public async Task HandleInvalidRegister()
    {
        Console.WriteLine("Invalid");
    }

    protected override async Task OnInitializedAsync()
    {
    }

}